var ListCache = require('./_ListCache')

var stackClear = require('./_stackClear')

var stackDelete = require('./_stackDelete')

var stackGet = require('./_stackGet')

var stackHas = require('./_stackHas')

var stackSet = require('./_stackSet')

/**
 * Creates a stack cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Stack (entries) {
  var data = this.__data__ = new ListCache(entries)
  this.size = data.size
}

// Add methods to `Stack`.
Stack.prototype.clear = stackClear
Stack.prototype['delete'] = stackDelete
Stack.prototype.get = stackGet
Stack.prototype.has = stackHas
Stack.prototype.set = stackSet

module.exports = Stack
