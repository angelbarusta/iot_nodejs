'use strict';var cov_2k3eoetcfe=function(){var path="C:\\Users\\Angel Barusta\\Desktop\\nodejs\\iot_nodejs\\models\\metric.js",hash="20ae79dbf9368799e1bcd26efee6f3cb968a20dd",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\Angel Barusta\\Desktop\\nodejs\\iot_nodejs\\models\\metric.js",statementMap:{"0":{start:{line:3,column:17},end:{line:3,column:37}},"1":{start:{line:4,column:22},end:{line:4,column:42}},"2":{start:{line:6,column:0},end:{line:21,column:1}},"3":{start:{line:7,column:22},end:{line:7,column:43}},"4":{start:{line:9,column:4},end:{line:20,column:6}}},fnMap:{"0":{name:"setupMetricModel",decl:{start:{line:6,column:26},end:{line:6,column:42}},loc:{start:{line:6,column:52},end:{line:21,column:1}},line:6}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0},f:{"0":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const Sequelize=(cov_2k3eoetcfe.s[0]++,require('sequelize'));const setupDatabase=(cov_2k3eoetcfe.s[1]++,require('../lib/db'));cov_2k3eoetcfe.s[2]++;module.exports=function setupMetricModel(config){cov_2k3eoetcfe.f[0]++;const sequelize=(cov_2k3eoetcfe.s[3]++,setupDatabase(config));cov_2k3eoetcfe.s[4]++;return sequelize.define('metric',{//-------- aqui van las propiedades------------
type:{// nombre de la propiedad
type:Sequelize.STRING,// tipo
allowNull:false},value:{// nombre de la propiedad
type:Sequelize.TEXT,// tipo
allowNull:false//---------------------------------------------
}});};// antes de correrlo verificar que no exista ningun error con "npm run lint"