'use strict';'use-strict';var cov_18x8kxxxz6=function(){var path="C:\\Users\\Angel Barusta\\Desktop\\nodejs\\iot_nodejs\\tests\\agent-tests.js",hash="9169aa5d7e1bbdbd3c5fb35247f16c72fdeac8b8",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"C:\\Users\\Angel Barusta\\Desktop\\nodejs\\iot_nodejs\\tests\\agent-tests.js",statementMap:{"0":{start:{line:4,column:30},end:{line:4,column:5630}},"1":{start:{line:5,column:27},end:{line:5,column:486}},"2":{start:{line:5,column:74},end:{line:5,column:93}},"3":{start:{line:5,column:96},end:{line:5,column:236}},"4":{start:{line:5,column:166},end:{line:5,column:219}},"5":{start:{line:5,column:220},end:{line:5,column:233}},"6":{start:{line:5,column:237},end:{line:5,column:454}},"7":{start:{line:5,column:328},end:{line:5,column:341}},"8":{start:{line:5,column:343},end:{line:5,column:362}},"9":{start:{line:5,column:363},end:{line:5,column:451}},"10":{start:{line:5,column:455},end:{line:5,column:482}},"11":{start:{line:7,column:13},end:{line:7,column:27}},"12":{start:{line:8,column:14},end:{line:8,column:30}},"13":{start:{line:9,column:19},end:{line:9,column:40}},"14":{start:{line:11,column:22},end:{line:11,column:49}},"15":{start:{line:13,column:13},end:{line:15,column:1}},"16":{start:{line:17,column:17},end:{line:19,column:1}},"17":{start:{line:21,column:13},end:{line:21,column:52}},"18":{start:{line:22,column:9},end:{line:22,column:10}},"19":{start:{line:23,column:16},end:{line:23,column:20}},"20":{start:{line:24,column:9},end:{line:24,column:13}},"21":{start:{line:25,column:14},end:{line:25,column:18}},"22":{start:{line:27,column:0},end:{line:41,column:3}},"23":{start:{line:28,column:4},end:{line:28,column:36}},"24":{start:{line:30,column:4},end:{line:33,column:6}},"25":{start:{line:35,column:26},end:{line:38,column:6}},"26":{start:{line:36,column:32},end:{line:36,column:41}},"27":{start:{line:37,column:33},end:{line:37,column:43}},"28":{start:{line:40,column:4},end:{line:40,column:37}},"29":{start:{line:43,column:0},end:{line:45,column:3}},"30":{start:{line:44,column:4},end:{line:44,column:33}},"31":{start:{line:47,column:0},end:{line:59,column:3}},"32":{start:{line:48,column:15},end:{line:48,column:41}},"33":{start:{line:51,column:4},end:{line:58,column:38}},"34":{start:{line:60,column:0},end:{line:98,column:3}},"35":{start:{line:61,column:16},end:{line:61,column:42}},"36":{start:{line:62,column:16},end:{line:62,column:42}},"37":{start:{line:63,column:16},end:{line:63,column:42}},"38":{start:{line:64,column:16},end:{line:64,column:42}},"39":{start:{line:66,column:4},end:{line:73,column:44}},"40":{start:{line:74,column:4},end:{line:81,column:36}},"41":{start:{line:82,column:4},end:{line:89,column:47}},"42":{start:{line:90,column:4},end:{line:97,column:37}},"43":{start:{line:100,column:0},end:{line:104,column:3}},"44":{start:{line:101,column:16},end:{line:101,column:43}},"45":{start:{line:103,column:4},end:{line:103,column:71}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:5,column:27},end:{line:5,column:28}},loc:{start:{line:5,column:39},end:{line:5,column:484}},line:5},"1":{name:"PowerAssertRecorder",decl:{start:{line:5,column:50},end:{line:5,column:69}},loc:{start:{line:5,column:72},end:{line:5,column:95}},line:5},"2":{name:"_capt",decl:{start:{line:5,column:143},end:{line:5,column:148}},loc:{start:{line:5,column:164},end:{line:5,column:235}},line:5},"3":{name:"_expr",decl:{start:{line:5,column:284},end:{line:5,column:289}},loc:{start:{line:5,column:305},end:{line:5,column:453}},line:5},"4":{name:"(anonymous_4)",decl:{start:{line:14,column:13},end:{line:14,column:14}},loc:{start:{line:14,column:25},end:{line:14,column:27}},line:14},"5":{name:"(anonymous_5)",decl:{start:{line:27,column:16},end:{line:27,column:17}},loc:{start:{line:27,column:28},end:{line:41,column:1}},line:27},"6":{name:"(anonymous_6)",decl:{start:{line:36,column:26},end:{line:36,column:27}},loc:{start:{line:36,column:32},end:{line:36,column:41}},line:36},"7":{name:"(anonymous_7)",decl:{start:{line:37,column:27},end:{line:37,column:28}},loc:{start:{line:37,column:33},end:{line:37,column:43}},line:37},"8":{name:"(anonymous_8)",decl:{start:{line:43,column:15},end:{line:43,column:16}},loc:{start:{line:43,column:20},end:{line:45,column:1}},line:43},"9":{name:"(anonymous_9)",decl:{start:{line:47,column:14},end:{line:47,column:15}},loc:{start:{line:47,column:19},end:{line:59,column:1}},line:47},"10":{name:"(anonymous_10)",decl:{start:{line:60,column:21},end:{line:60,column:22}},loc:{start:{line:60,column:26},end:{line:98,column:1}},line:60},"11":{name:"(anonymous_11)",decl:{start:{line:100,column:30},end:{line:100,column:31}},loc:{start:{line:100,column:41},end:{line:104,column:1}},line:100}},branchMap:{"0":{loc:{start:{line:44,column:4},end:{line:44,column:32}},type:"binary-expr",locations:[{start:{line:44,column:4},end:{line:44,column:11}},{start:{line:44,column:15},end:{line:44,column:32}}],line:44}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},b:{"0":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();var _powerAssertVisitorKeys=(cov_18x8kxxxz6.s[0]++,'{"ArrayExpression":["elements"],"AssignmentExpression":["left","right"],"BinaryExpression":["left","right"],"Directive":["value"],"DirectiveLiteral":[],"BlockStatement":["directives","body"],"BreakStatement":["label"],"CallExpression":["callee","arguments"],"CatchClause":["param","body"],"ConditionalExpression":["test","consequent","alternate"],"ContinueStatement":["label"],"DebuggerStatement":[],"DoWhileStatement":["test","body"],"EmptyStatement":[],"ExpressionStatement":["expression"],"File":["program"],"ForInStatement":["left","right","body"],"ForStatement":["init","test","update","body"],"FunctionDeclaration":["id","params","body","returnType","typeParameters"],"FunctionExpression":["id","params","body","returnType","typeParameters"],"Identifier":["typeAnnotation"],"IfStatement":["test","consequent","alternate"],"LabeledStatement":["label","body"],"StringLiteral":[],"NumericLiteral":[],"NullLiteral":[],"BooleanLiteral":[],"RegExpLiteral":[],"LogicalExpression":["left","right"],"MemberExpression":["object","property"],"NewExpression":["callee","arguments"],"Program":["directives","body"],"ObjectExpression":["properties"],"ObjectMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectProperty":["key","value","decorators"],"RestElement":["argument","typeAnnotation"],"ReturnStatement":["argument"],"SequenceExpression":["expressions"],"SwitchCase":["test","consequent"],"SwitchStatement":["discriminant","cases"],"ThisExpression":[],"ThrowStatement":["argument"],"TryStatement":["block","handler","finalizer"],"UnaryExpression":["argument"],"UpdateExpression":["argument"],"VariableDeclaration":["declarations"],"VariableDeclarator":["id","init"],"WhileStatement":["test","body"],"WithStatement":["object","body"],"AssignmentPattern":["left","right"],"ArrayPattern":["elements","typeAnnotation"],"ArrowFunctionExpression":["params","body","returnType","typeParameters"],"ClassBody":["body"],"ClassDeclaration":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ClassExpression":["id","body","superClass","mixins","typeParameters","superTypeParameters","implements","decorators"],"ExportAllDeclaration":["source"],"ExportDefaultDeclaration":["declaration"],"ExportNamedDeclaration":["declaration","specifiers","source"],"ExportSpecifier":["local","exported"],"ForOfStatement":["left","right","body"],"ImportDeclaration":["specifiers","source"],"ImportDefaultSpecifier":["local"],"ImportNamespaceSpecifier":["local"],"ImportSpecifier":["local","imported"],"MetaProperty":["meta","property"],"ClassMethod":["key","params","body","decorators","returnType","typeParameters"],"ObjectPattern":["properties","typeAnnotation"],"SpreadElement":["argument"],"Super":[],"TaggedTemplateExpression":["tag","quasi"],"TemplateElement":[],"TemplateLiteral":["quasis","expressions"],"YieldExpression":["argument"],"AnyTypeAnnotation":[],"ArrayTypeAnnotation":["elementType"],"BooleanTypeAnnotation":[],"BooleanLiteralTypeAnnotation":[],"NullLiteralTypeAnnotation":[],"ClassImplements":["id","typeParameters"],"ClassProperty":["key","value","typeAnnotation","decorators"],"DeclareClass":["id","typeParameters","extends","body"],"DeclareFunction":["id"],"DeclareInterface":["id","typeParameters","extends","body"],"DeclareModule":["id","body"],"DeclareModuleExports":["typeAnnotation"],"DeclareTypeAlias":["id","typeParameters","right"],"DeclareOpaqueType":["id","typeParameters","supertype"],"DeclareVariable":["id"],"DeclareExportDeclaration":["declaration","specifiers","source"],"ExistentialTypeParam":[],"FunctionTypeAnnotation":["typeParameters","params","rest","returnType"],"FunctionTypeParam":["name","typeAnnotation"],"GenericTypeAnnotation":["id","typeParameters"],"InterfaceExtends":["id","typeParameters"],"InterfaceDeclaration":["id","typeParameters","extends","body"],"IntersectionTypeAnnotation":["types"],"MixedTypeAnnotation":[],"EmptyTypeAnnotation":[],"NullableTypeAnnotation":["typeAnnotation"],"NumericLiteralTypeAnnotation":[],"NumberTypeAnnotation":[],"StringLiteralTypeAnnotation":[],"StringTypeAnnotation":[],"ThisTypeAnnotation":[],"TupleTypeAnnotation":["types"],"TypeofTypeAnnotation":["argument"],"TypeAlias":["id","typeParameters","right"],"OpaqueType":["id","typeParameters","impltype","supertype"],"TypeAnnotation":["typeAnnotation"],"TypeCastExpression":["expression","typeAnnotation"],"TypeParameter":["bound"],"TypeParameterDeclaration":["params"],"TypeParameterInstantiation":["params"],"ObjectTypeAnnotation":["properties","indexers","callProperties"],"ObjectTypeCallProperty":["value"],"ObjectTypeIndexer":["id","key","value"],"ObjectTypeProperty":["key","value"],"ObjectTypeSpreadProperty":["argument"],"QualifiedTypeIdentifier":["id","qualification"],"UnionTypeAnnotation":["types"],"VoidTypeAnnotation":[],"JSXAttribute":["name","value"],"JSXClosingElement":["name"],"JSXElement":["openingElement","children","closingElement"],"JSXEmptyExpression":[],"JSXExpressionContainer":["expression"],"JSXSpreadChild":["expression"],"JSXIdentifier":[],"JSXMemberExpression":["object","property"],"JSXNamespacedName":["namespace","name"],"JSXOpeningElement":["name","attributes"],"JSXSpreadAttribute":["argument"],"JSXText":[],"Noop":[],"ParenthesizedExpression":["expression"],"AwaitExpression":["argument"],"ForAwaitStatement":["left","right","body"],"BindExpression":["object","callee"],"Import":[],"Decorator":["expression"],"DoExpression":["body"],"ExportDefaultSpecifier":["exported"],"ExportNamespaceSpecifier":["exported"],"RestProperty":["argument"],"SpreadProperty":["argument"]}'),_powerAssertRecorder=(cov_18x8kxxxz6.s[1]++,function(){cov_18x8kxxxz6.f[0]++;function PowerAssertRecorder(){cov_18x8kxxxz6.f[1]++;cov_18x8kxxxz6.s[2]++;this.captured=[];}cov_18x8kxxxz6.s[3]++;PowerAssertRecorder.prototype._capt=function _capt(value,espath){cov_18x8kxxxz6.f[2]++;cov_18x8kxxxz6.s[4]++;this.captured.push({value:value,espath:espath});cov_18x8kxxxz6.s[5]++;return value;};cov_18x8kxxxz6.s[6]++;PowerAssertRecorder.prototype._expr=function _expr(value,source){cov_18x8kxxxz6.f[3]++;var capturedValues=(cov_18x8kxxxz6.s[7]++,this.captured);cov_18x8kxxxz6.s[8]++;this.captured=[];cov_18x8kxxxz6.s[9]++;return{powerAssertContext:{value:value,events:capturedValues},source:source};};cov_18x8kxxxz6.s[10]++;return PowerAssertRecorder;}());const test=(cov_18x8kxxxz6.s[11]++,require('ava'));const sinon=(cov_18x8kxxxz6.s[12]++,require('sinon'));const proxyquire=(cov_18x8kxxxz6.s[13]++,require('proxyquire'));const agentFixtures=(cov_18x8kxxxz6.s[14]++,require('./fixtures/agent'));let config=(cov_18x8kxxxz6.s[15]++,{logging:function(){cov_18x8kxxxz6.f[4]++;}});let MetricStub=(cov_18x8kxxxz6.s[16]++,{belongsTo:sinon.spy()// un spy es un funcion que nos dice datos sobre la funcion, es un chicmoso vamos 
});let single=(cov_18x8kxxxz6.s[17]++,object.assign({},agentFixtures.single));let id=(cov_18x8kxxxz6.s[18]++,1);let AgentStub=(cov_18x8kxxxz6.s[19]++,null);let db=(cov_18x8kxxxz6.s[20]++,null);let sandbox=(cov_18x8kxxxz6.s[21]++,null);cov_18x8kxxxz6.s[22]++;test.beforeEach(async()=>{cov_18x8kxxxz6.f[5]++;cov_18x8kxxxz6.s[23]++;sandbox=sinon.createSandbox();cov_18x8kxxxz6.s[24]++;AgentStub={//un sandbox es un ambiente especifico que solo funciona para este caso en particular
hasMany:sandbox.spy()};const setupDatabase=(cov_18x8kxxxz6.s[25]++,proxyquire('../',{'./models/agent':()=>{cov_18x8kxxxz6.f[6]++;cov_18x8kxxxz6.s[26]++;return AgentStub;},// las mismas rutas que las que estan e declaradas en index.js
'./models/metric':()=>{cov_18x8kxxxz6.f[7]++;cov_18x8kxxxz6.s[27]++;return MetricStub;}}));cov_18x8kxxxz6.s[28]++;db=await setupDatabase(config);});cov_18x8kxxxz6.s[29]++;test.afterEach(t=>{cov_18x8kxxxz6.f[8]++;cov_18x8kxxxz6.s[30]++;(cov_18x8kxxxz6.b[0][0]++,sandbox)&&(cov_18x8kxxxz6.b[0][1]++,sandbox.restore());});cov_18x8kxxxz6.s[31]++;test('Agent',t=>{cov_18x8kxxxz6.f[9]++;var _rec=(cov_18x8kxxxz6.s[32]++,new _powerAssertRecorder());// verificacion de que Agent exista
cov_18x8kxxxz6.s[33]++;t.truthy(_rec._expr(_rec._capt(_rec._capt(db,'arguments/0/object').Agent,'arguments/0'),{content:'t.truthy(db.Agent, \'Agent service should exist\')',filepath:'tests\\agent-tests.js',line:46,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"truthy","range":[2,8]},"computed":false,"range":[0,8]},"arguments":[{"type":"MemberExpression","object":{"type":"Identifier","name":"db","range":[9,11]},"property":{"type":"Identifier","name":"Agent","range":[12,17]},"computed":false,"range":[9,17]},{"type":"StringLiteral","value":"Agent service should exist","range":[19,47]}],"range":[0,48]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"name"},"value":"truthy","range":[2,8]},{"type":{"label":"("},"range":[8,9]},{"type":{"label":"name"},"value":"db","range":[9,11]},{"type":{"label":"."},"range":[11,12]},{"type":{"label":"name"},"value":"Agent","range":[12,17]},{"type":{"label":","},"range":[17,18]},{"type":{"label":"string"},"value":"Agent service should exist","range":[19,47]},{"type":{"label":")"},"range":[47,48]}]',visitorKeys:_powerAssertVisitorKeys}),'Agent service should exist');// si se resulve el valor a verdadero
});cov_18x8kxxxz6.s[34]++;test.serial('Setup',t=>{cov_18x8kxxxz6.f[10]++;var _rec2=(cov_18x8kxxxz6.s[35]++,new _powerAssertRecorder()),_rec3=(cov_18x8kxxxz6.s[36]++,new _powerAssertRecorder()),_rec4=(cov_18x8kxxxz6.s[37]++,new _powerAssertRecorder()),_rec5=(cov_18x8kxxxz6.s[38]++,new _powerAssertRecorder());cov_18x8kxxxz6.s[39]++;t.true(_rec2._expr(_rec2._capt(_rec2._capt(_rec2._capt(AgentStub,'arguments/0/object/object').hasMany,'arguments/0/object').called,'arguments/0'),{content:'t.true(AgentStub.hasMany.called, \'AgentModel.hasMany fue ejecutada\')',filepath:'tests\\agent-tests.js',line:50,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"hasMany","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"called","range":[25,31]},"computed":false,"range":[7,31]},{"type":"StringLiteral","value":"AgentModel.hasMany fue ejecutada","range":[33,67]}],"range":[0,68]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"hasMany","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"called","range":[25,31]},{"type":{"label":","},"range":[31,32]},{"type":{"label":"string"},"value":"AgentModel.hasMany fue ejecutada","range":[33,67]},{"type":{"label":")"},"range":[67,68]}]',visitorKeys:_powerAssertVisitorKeys}),'AgentModel.hasMany fue ejecutada');cov_18x8kxxxz6.s[40]++;t.true(_rec3._expr(_rec3._capt(_rec3._capt(_rec3._capt(AgentStub,'arguments/0/callee/object/object').hasMany,'arguments/0/callee/object').calledWith(_rec3._capt(MetricStub,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(AgentStub.hasMany.calledWith(MetricStub), \'Argumento de esa funcion\')',filepath:'tests\\agent-tests.js',line:51,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"AgentStub","range":[7,16]},"property":{"type":"Identifier","name":"hasMany","range":[17,24]},"computed":false,"range":[7,24]},"property":{"type":"Identifier","name":"calledWith","range":[25,35]},"computed":false,"range":[7,35]},"arguments":[{"type":"Identifier","name":"MetricStub","range":[36,46]}],"range":[7,47]},{"type":"StringLiteral","value":"Argumento de esa funcion","range":[49,75]}],"range":[0,76]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"AgentStub","range":[7,16]},{"type":{"label":"."},"range":[16,17]},{"type":{"label":"name"},"value":"hasMany","range":[17,24]},{"type":{"label":"."},"range":[24,25]},{"type":{"label":"name"},"value":"calledWith","range":[25,35]},{"type":{"label":"("},"range":[35,36]},{"type":{"label":"name"},"value":"MetricStub","range":[36,46]},{"type":{"label":")"},"range":[46,47]},{"type":{"label":","},"range":[47,48]},{"type":{"label":"string"},"value":"Argumento de esa funcion","range":[49,75]},{"type":{"label":")"},"range":[75,76]}]',visitorKeys:_powerAssertVisitorKeys}),'Argumento de esa funcion');cov_18x8kxxxz6.s[41]++;t.true(_rec4._expr(_rec4._capt(_rec4._capt(_rec4._capt(MetricStub,'arguments/0/object/object').belongsTo,'arguments/0/object').called,'arguments/0'),{content:'t.true(MetricStub.belongsTo.called, \'MetricModel.belongsTo fue ejecutada\')',filepath:'tests\\agent-tests.js',line:52,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"belongsTo","range":[18,27]},"computed":false,"range":[7,27]},"property":{"type":"Identifier","name":"called","range":[28,34]},"computed":false,"range":[7,34]},{"type":"StringLiteral","value":"MetricModel.belongsTo fue ejecutada","range":[36,73]}],"range":[0,74]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"belongsTo","range":[18,27]},{"type":{"label":"."},"range":[27,28]},{"type":{"label":"name"},"value":"called","range":[28,34]},{"type":{"label":","},"range":[34,35]},{"type":{"label":"string"},"value":"MetricModel.belongsTo fue ejecutada","range":[36,73]},{"type":{"label":")"},"range":[73,74]}]',visitorKeys:_powerAssertVisitorKeys}),'MetricModel.belongsTo fue ejecutada');cov_18x8kxxxz6.s[42]++;t.true(_rec5._expr(_rec5._capt(_rec5._capt(_rec5._capt(MetricStub,'arguments/0/callee/object/object').belongsTo,'arguments/0/callee/object').calledWith(_rec5._capt(AgentStub,'arguments/0/arguments/0')),'arguments/0'),{content:'t.true(MetricStub.belongsTo.calledWith(AgentStub), \'Argumentos de esa funcion\')',filepath:'tests\\agent-tests.js',line:53,ast:'{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"Identifier","name":"t","range":[0,1]},"property":{"type":"Identifier","name":"true","range":[2,6]},"computed":false,"range":[0,6]},"arguments":[{"type":"CallExpression","callee":{"type":"MemberExpression","object":{"type":"MemberExpression","object":{"type":"Identifier","name":"MetricStub","range":[7,17]},"property":{"type":"Identifier","name":"belongsTo","range":[18,27]},"computed":false,"range":[7,27]},"property":{"type":"Identifier","name":"calledWith","range":[28,38]},"computed":false,"range":[7,38]},"arguments":[{"type":"Identifier","name":"AgentStub","range":[39,48]}],"range":[7,49]},{"type":"StringLiteral","value":"Argumentos de esa funcion","range":[51,78]}],"range":[0,79]}',tokens:'[{"type":{"label":"name"},"value":"t","range":[0,1]},{"type":{"label":"."},"range":[1,2]},{"type":{"label":"true"},"value":"true","range":[2,6]},{"type":{"label":"("},"range":[6,7]},{"type":{"label":"name"},"value":"MetricStub","range":[7,17]},{"type":{"label":"."},"range":[17,18]},{"type":{"label":"name"},"value":"belongsTo","range":[18,27]},{"type":{"label":"."},"range":[27,28]},{"type":{"label":"name"},"value":"calledWith","range":[28,38]},{"type":{"label":"("},"range":[38,39]},{"type":{"label":"name"},"value":"AgentStub","range":[39,48]},{"type":{"label":")"},"range":[48,49]},{"type":{"label":","},"range":[49,50]},{"type":{"label":"string"},"value":"Argumentos de esa funcion","range":[51,78]},{"type":{"label":")"},"range":[78,79]}]',visitorKeys:_powerAssertVisitorKeys}),'Argumentos de esa funcion');});cov_18x8kxxxz6.s[43]++;test.serial('Agent#findById',async t=>{cov_18x8kxxxz6.f[11]++;let agent=(cov_18x8kxxxz6.s[44]++,await db.Agent.findById(id));cov_18x8kxxxz6.s[45]++;t.deepEqual(agent,agentFixtures.byId(id),'deberia ser el mismo');});//# sourceMappingURL=C:\Users\Angel Barusta\Desktop\nodejs\iot_nodejs\node_modules\.cache\ava\8ce2dac97ce899288a5430364a6d4ac4.js.map