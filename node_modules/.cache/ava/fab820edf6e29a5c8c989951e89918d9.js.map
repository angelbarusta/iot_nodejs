{"version":3,"sources":["agent-tests.js"],"names":["test","require","proxyquire","config","logging","MetricStub","belongsTo","AgentStub","db","beforeEach","hasMany","setupDatabase","t","truthy","Agent"],"mappings":";AAAA;;;;;AAEA,MAAMA,OAAOC,QAAQ,KAAR,CAAb;AACA,MAAMC,aAAaD,QAAQ,YAAR,CAAnB;;AAEA,IAAIE,SAAS;AACTC,aAAQ,YAAY,CAAE;AADb,CAAb;;AAIA,IAAIC,aAAa;AACbC,eAAW,YAAY,CAAE;AADZ,CAAjB;;AAIA,IAAIC,YAAY,IAAhB;AACA,IAAIC,KAAK,IAAT;;AAEAR,KAAKS,UAAL,CAAgB,YAAY;AACxBF,gBAAY;AACRG,iBAAS,YAAY,CAAE;AADf,KAAZ;;AAIA,UAAMC,gBAAgBT,WAAW,KAAX,EAAkB;AACpC,0BAAkB,MAAMK,SADY,EACA;AACpC,2BAAmB,MAAMF;AAFW,KAAlB,CAAtB;;AAMAG,SAAK,MAAMG,cAAcR,MAAd,CAAX;AACH,CAZD;;AAcAH,KAAK,OAAL,EAAcY,KAAK;AAAA;;AAAE;AACjBA,MAAEC,MAAF,uBAAS,qCAAGC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAmB,4BAAnB,EADe,CACkC;AAEpD,CAHD","file":"agent-tests.js","sourcesContent":["'use-strict'\r\n\r\nconst test = require('ava')\r\nconst proxyquire = require('proxyquire')\r\n\r\nlet config = {\r\n    logging:function () {}\r\n}\r\n\r\nlet MetricStub = {\r\n    belongsTo: function () {}\r\n}\r\n\r\nlet AgentStub = null\r\nlet db = null\r\n\r\ntest.beforeEach(async () => {\r\n    AgentStub = {\r\n        hasMany: function () {}\r\n    }\r\n\r\n    const setupDatabase = proxyquire('../', {\r\n        './models/agent': () => AgentStub,  // las mismas rutas que las que estan e declaradas en index.js\r\n        './models/metric': () => MetricStub\r\n    })\r\n\r\n\r\n    db = await setupDatabase(config)\r\n}) \r\n\r\ntest('Agent', t => { // verificacion de que Agent exista\r\n    t.truthy(db.Agent, 'Agent service should exist') // si se resulve el valor a verdadero\r\n\r\n})"]}